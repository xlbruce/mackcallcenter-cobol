<?xml version="1.0" encoding="UTF-8"?>
<project name="mackcallcenter-cobol" default="cobolbuild" basedir="." xmlns:ac="antlib:net.sf.antcontrib">
	<typedef name="mffilelist" classname="com.microfocus.ant.TypeFileList"/>
	<typedef name="mfdirlist" classname="com.microfocus.ant.TypeDirectiveList"/>
	<typedef name="mfdestfilelist" classname="com.microfocus.ant.TypeDestinationFileList"/>
	<taskdef name="cobol" classname="com.microfocus.ant.TaskCobol"/>
	<taskdef name="cobolclean" classname="com.microfocus.ant.TaskCobolClean"/>
	<taskdef name="cobollink" classname="com.microfocus.ant.TaskCobolLink"/>
	<taskdef uri="antlib:net.sf.antcontrib" resource="net/sf/antcontrib/antlib.xml" classpath="lib/ant-contrib-1.0b3.jar"/>
	<!--  ******************************  -->
	<!--  * OS-specific initialisation *  -->
	<!--  ******************************  -->
	<target name="os.init">
		<condition property="windows">
			<os family="windows"/>
		</condition>
		<condition property="unix">
			<os family="unix"/>
		</condition>
		<property name="failOnError" value="false"/>
		<property name="cobolFailOnError" value="true"/>
		<property name="cobollinkFailOnError" value="${failOnError}"/>
	</target>
	<target name="os.init.windows" if="windows">
		<property name="dllext" value=".dll"/>
		<property name="exeext" value=".exe"/>
		<property name="objext" value=".obj"/>
		<property name="equalsInDir" value="="/>
		<property name="pathVar.pS" value=";"/>
		<property name="shell" value="cmd"/>
		<property name="shell.ext" value=".bat"/>
		<property name="shell.arg" value="/c"/>
		<property name="script.header" value="@rem MS-DOS Batch File"/>
	</target>
	<target name="os.init.unix" if="unix">
		<property name="dllext" value=".so"/>
		<property name="exeext" value=""/>
		<property name="objext" value=".o"/>
		<property name="equalsInDir" value="="/>
		<property name="pathVar.pS" value=":"/>
		<property name="shell" value="sh"/>
		<property name="shell.ext" value=".sh"/>
		<property name="shell.arg" value="-c"/>
		<property name="script.header" value="#!/bin/sh"/>
	</target>
	<!--  *****************************  -->
	<!--  * COBOL compiler directives *  -->
	<!--  *****************************  -->
	<!--  **********************  -->
	<!--  * COBOL source files *  -->
	<!--  **********************  -->
	<!--  ****************************************  -->
	<!--  * COBOL Source Files and Directive Set *  -->
	<!--  ****************************************  -->
	<!--  ****************  -->
	<!--  * Object files *  -->
	<!--  ****************  -->
	<!--  *************************  -->
	<!--  * Configuration targets *  -->
	<!--  *************************  -->
	<!-- cfg.New_Configuration -->
	<target name="cobol.cfg.New_Configuration" depends="init">
		<echo message="No Cobol files to compile"/>
	</target>
	<target name="New_Configuration.FileCompile" depends="init">
		<ac:for list="${filesList}" param="filename" keepgoing="true" trim="true">
			<sequential>
				<ac:if>
					<not>
						<isset property="isCancelled"/>
					</not>
					<then>
						<ac:antcallback target="FileCompile.New_Configuration.@{filename}" inheritAll="true" return="isCancelled">
							<param name="filename" value="@{filename}"/>
						</ac:antcallback>
					</then>
				</ac:if>
			</sequential>
		</ac:for>
	</target>
	<target name="pre.build.cfg.New_Configuration" depends="init">
	</target>
	<target name="post.build.cfg.New_Configuration" depends="init">
	</target>
	<target name="clean.cfg.New_Configuration" depends="init">
		<cobolclean destdir="${basedir}/New_Configuration.bin" desttype="exe">
			<mffilelist>
				<file name="MacKallCenter"/>
			</mffilelist>
		</cobolclean>
	</target>
	<!--  *******************  -->
	<!--  * General targets *  -->
	<!--  *******************  -->
	<target name="init.New_Configuration" if="isNew_Configuration">
	</target>
	<target name="init" depends="os.init,os.init.windows,os.init.unix">
		<property environment="env"/>
		<property name="mackcallcenter-cobol" value="${basedir}"/>
		<property name="cfg" value="New_Configuration"/>
		<property name="cfgtarget" value="cfg.${cfg}"/>
		<property name="forceCompile" value="true"/>
		<condition property="isNew_Configuration">
			<equals arg1="${cfg}" arg2="New_Configuration"/>
		</condition>
		<property name="pathVar.ECLIPSE_HOME" value="${env.ECLIPSE_HOME}"/>
		<property name="pathVar.PARENT_LOC" value="${env.PARENT_LOC}"/>
		<property name="pathVar.WORKSPACE_LOC" value="${env.WORKSPACE_LOC}"/>
		<property name="pathVar.PROJECT_LOC" value="${env.PROJECT_LOC}"/>
	</target>
	<target name="init.all.configurations" depends="init.New_Configuration">
	</target>
	<target name="clean" depends="init,init.all.configurations">
		<antcall target="clean.${cfgtarget}" inheritAll="true"/>
	</target>
	<target name="compileSource" depends="init,init.all.configurations">
		<antcall target="${cfg}.FileCompile" inheritAll="true"/>
	</target>
	<target name="compile" depends="compileSource">
	</target>
	<target name="nature.specific.build">
		<antcall target="cobol.${cfgtarget}" inheritAll="true"/>
	</target>
	<target name="cobolbuild" depends="init,init.all.configurations">
		<antcall target="pre.build.${cfgtarget}" inheritAll="true"/>
		<antcall target="nature.specific.build" inheritAll="true"/>
		<antcall target="post.build.${cfgtarget}" inheritAll="true"/>
	</target>
</project>
